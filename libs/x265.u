# GPL

upkg_lic="GPL-2.0-only"
upkg_ver=3.5
upkg_url=https://bitbucket.org/multicoreware/x265_git/get/$upkg_ver.tar.gz
upkg_zip=multicoreware-x265.$upkg_ver.tar.gz
upkg_sha=5ca3403c08de4716719575ec56c686b1eb55b078c0fe50a064dcf1ac20af1618


upkg_static() {
    args=(
        -DEXTRA_LIB=\"x265_main12.a\;x265_main10.a\"
        -DEXTRA_LINK_FLAGS=-L.
        -DLINKED_12BIT=ON
        -DLINKED_10BIT=ON
        -DENABLE_SHARED=OFF
        )

    args_high=(
        -DHIGH_BIT_DEPTH=ON 
        -DEXPORT_C_API=OFF 
        -DENABLE_CLI=OFF 
        -DENABLE_SHARED=OFF
        )

    # build high bits always as static
    mkdir -p {8bit,10bit,12bit}
    # 12 bit
    cd 12bit 
    upkg_configure "${args_high[@]}" -DMAIN12=ON ../source && 
    upkg_make_j1 &&
    mv libx265.a ../8bit/libx265_main12.a || { ulog error "Error" "build main12 failed"; return 1; }
    cd -

    # 10bit
    cd 10bit 
    upkg_configure "${args_high[@]}" -DENABLE_HDR10_PLUS=ON ../source && 
    upkg_make_j1 &&
    mv libx265.a ../8bit/libx265_main10.a || { ulog error "Error" "build main10 failed"; return 1; }
    cd -

    # it seems x265 has problem with njobs
    # 8bit
    cd 8bit
    upkg_configure "${args[@]}" ../source &&
    upkg_make_j1 &&
    mv libx265.a libx265_main.a || { ulog error "Error" "build main8 failed"; return 1; }

    if upkg_darwin; then
        libtool -static -o libx265.a libx265_main.a libx265_main10.a libx265_main12.a
    else
        $AR -M <<- 'EOF'
CREATE libx265.a
ADDLIB libx265_main.a
ADDLIB libx265_main10.a
ADDLIB libx265_main12.a
SAVE
END
EOF
    fi && 
    ./x265 -V &&
    upkg_install
}


# vim:ft=sh:ff=unix:fenc=utf-8:et:ts=4:sw=4:sts=4
