
upkg_lic="GPL/LGPL/BSD"
upkg_ver=6.1.1
upkg_url=https://ffmpeg.org/releases/ffmpeg-$upkg_ver.tar.xz
upkg_sha=8684f4b00f94b85461884c3719382f1261f0d9eb3d59640a1f4ac0873616f968

# ENVs
FFMPEG_GPL=${FFMPEG_GPL:-1}
FFMPEG_NONFREE=${FFMPEG_NONFREE:-1}
FFMPEG_HWACCEL=${FFMPEG_HWACCEL:-0}
FFMPEG_HUGE=${FFMPEG_HUGE:-1}
FFMPEG_FFPLAY=${FFMPEG_FFPLAY:=0}

upkg_dep=(
    # basic libs
    zlib bzip2 xz libiconv
    # audio libs
    soxr lame ogg vorbis opus
    # image libs 
    png gif turbojpeg tiff webp openjpeg 
    # video libs 
    zimg theora vpx 
    openh264 kvazaar
    # text libs 
    fribidi libass 
    # demuxers & muxers 
    libxml2
    # filters
    freetype fribidi harfbuzz    # for drawtext, TODO: fontconfig
)

is_linux && upkg_dep+=(gnutls)

# TODO: Fix build libdrm with alpine/musl
is_glibc && upkg_dep+=(libdrm)

[ $FFMPEG_GPL -ne 0 ]       && upkg_dep+=(amr x264 x265 xvidcore frei0r)
[ $FFMPEG_NONFREE -ne 0 ]   && upkg_dep+=(fdk-aac)
[ $FFMPEG_HWACCEL -ne 0 ]   && upkg_dep+=(libva OpenCL)
[ $FFMPEG_FFPLAY -ne 0 ]    && upkg_dep+=(sdl2)

upkg_static() {
    upkg_args=(
        --enable-pic
        --enable-pthreads
        --enable-hardcoded-tables
        --extra-version=UniStatic
        # use extra- to avoid override default flags
        --extra-cflags=\"$CFLAGS\" 
        --extra-cxxflags=\"$CXXFLAGS\"
        --extra-ldflags=\"$LDFLAGS\"
        #--disable-stripping        # result in larger size
        #--enable-shared 
        #--enable-rpath 
        --enable-zlib
        --enable-bzlib
        --enable-lzma
        --enable-iconv --extra-libs=-liconv
        --enable-libzimg
        --enable-ffmpeg 
        --enable-ffprobe 
        --disable-autodetect        # manual control external libraries
        --disable-htmlpages
        --enable-libsoxr            # audio resampling
        --enable-libmp3lame         # mp3 encoding
        --enable-libvpx             # vp8 & vp9 encoding & decoding
        --enable-libwebp            # webp encoding
        --enable-libvorbis          # vorbis encoding & decoding, ffmpg has native one but experimental
        --enable-libtheora          # enable if you need theora encoding
        --enable-libopus            # opus encoding & decoding, ffmpeg has native one
        --enable-libopenjpeg        # jpeg 2000 encoding & decoding, ffmpeg has native one
        --enable-libopenh264        # h264 encoding
        --enable-libkvazaar         # hevc encoding
        --enable-libass             # ass subtitles
        # for drawtext filter
        #--enable-libfontconfig 
        --enable-libfreetype
        --enable-libfribidi
        --enable-libharfbuzz
    )

    # GPL
    [ $FFMPEG_GPL -ne 0 ] && {
        upkg_args+=(
            --enable-gpl                # GPL 2.x
            --enable-libx264            # h264 encoding
            --enable-libx265            # hevc encoding
            --enable-libxvid            # mpeg4 encoding, ffmpeg has native one
            --enable-frei0r             # frei0r 
            
            --enable-version3           # LGPL 3.0
            --enable-libopencore-amrnb  # amrnb encoding
            --enable-libopencore-amrwb  # amrwb encoding
        )
        upkg_args=(${upkg_args[@]/--enable-openssl/})
        upkg_args=(${upkg_args[@]/--enable-libtls/})
    }

    # nonfree -> unredistributable
    [ $FFMPEG_NONFREE -ne 0 ] && upkg_args+=(
        --enable-nonfree 
        --enable-libfdk-aac         # aac encoding
    )

    # components 
    [ $FFMPEG_HUGE -ne 0 ] && upkg_args+=(
        --enable-demuxers
        --enable-muxers
        --enable-decoders 
        --enable-encoders
        --enable-protocols
        --enable-parsers
        --enable-bsfs
        --enable-filters
        --enable-indevs
        # no outdev here
    ) # OR custom your own build here

    [ $FFMPEG_FFPLAY -ne 0 ] && upkg_args+=(
        --enable-ffplay
        --enable-sdl2
    ) || upkg_args+=(
        --disable-ffplay
        --disable-outdevs
    )

    # static linked
    upkg_args+=(
        --disable-shared 
        --enable-static
        --pkg-config-flags=\"--static\"
    )
    
    is_linux && {
        upkg_args+=(
            # ffmpeg prefer shared libs, fix bug using extra libs
            --extra-libs=\"-lm -lpthread\"
            --enable-gnutls
            --enable-linux-perf
        )
        is_glibc && upkg_args+=( --enable-libdrm )
    }
    
    # always enable hwaccels for macOS
    is_darwin && upkg_args+=(
        --enable-hwaccels
        --enable-securetransport    # TLS
        --enable-coreimage          # for avfilter
        --enable-audiotoolbox       # audio codecs
        --enable-videotoolbox       # video codecs
        --enable-opencl
    )

    is_msys && upkg_args+=(
        # read kvazaar's README
        --extra-cflags=-DKVZ_STATIC_LIB
    ) 

    # platform hw accel
    # https://trac.ffmpeg.org/wiki/HWAccelIntro
    [ $FFMPEG_HWACCEL -ne 0 ] && {
        upkg_args+=(--enable-hwaccels)

        is_linux && upkg_args+=(
            #--enable-opencl
            #--enable-opengl
            #--enable-vdpau
            --enable-vaapi
        )

        is_msys && upkg_args+=(
            --enable-opencl
            --enable-d3d11va
            --enable-dxva2
        )
    }

    cleanup || true

    ## fixed by set PKG_CONFIG with '--static' in ulib.sh
    # work arrounds: DEPRECATED
    #is_linux && sed 's/-lsoxr/& -lm/g;s/-lxvidcore/& -lm/g' -i configure

    configure --disable-shared &&
    make &&

    ## fixed by set PKG_CONFIG with '--static' in ulib.sh
    # fix libavcodec.pc: DEPRECATED
    #sed -i 's/Libs.private:.*$/& -liconv/' libavcodec/libavcodec.pc &&

    # install libs headers progs
    make install &&

    # install all tools
    make alltools &&
    for x in tools/*; do 
        [ -x "$x" ] && install -v -s -m 755 "$x" "$PREFIX/bin" 2> /dev/null || true
    done
}

# vim:ft=sh:syntax=bash:ff=unix:fenc=utf-8:et:ts=4:sw=4:sts=4
